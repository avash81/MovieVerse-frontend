{"ast":null,"code":"import axios from 'axios';\n\n// Use process.env.REACT_APP_API_URL for Create React App\n// Default to /api to leverage the proxy in development, and use Render backend URL in production\nconst API_URL = process.env.REACT_APP_API_URL || (process.env.NODE_ENV === 'development' ? '/api' : 'https://movieverse-backend.onrender.com/api');\nconst TMDB_API_KEY = process.env.TMDB_API_KEY || 'be73ce1f00402fb574b1dba0962181bc';\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\n\n// Rate limiting delay (250ms between requests to stay under 40 requests per 10 seconds)\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\nlet lastTmdbRequestTime = 0;\nconst rateLimitedRequest = async requestFn => {\n  const now = Date.now();\n  const timeSinceLastRequest = now - lastTmdbRequestTime;\n  const minDelay = 250; // 250ms delay ensures < 40 requests per 10 seconds\n  if (timeSinceLastRequest < minDelay) {\n    await delay(minDelay - timeSinceLastRequest);\n  }\n  lastTmdbRequestTime = Date.now();\n  return requestFn();\n};\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n  return headers;\n};\n\n// Fetch trailer from TMDb API\nexport const fetchTmdbTrailer = async movieId => {\n  console.log('Fetching TMDb trailer for movieId:', movieId);\n  return rateLimitedRequest(async () => {\n    try {\n      const response = await axios.get(`${TMDB_BASE_URL}/movie/${movieId}/videos`, {\n        params: {\n          api_key: TMDB_API_KEY,\n          language: 'en-US'\n        },\n        timeout: 10000\n      });\n      console.log('TMDb API Response (videos):', response.data);\n      const trailer = response.data.results.find(video => video.type === 'Trailer' && video.site === 'YouTube');\n      if (trailer) {\n        return `https://www.youtube.com/watch?v=${trailer.key}`;\n      }\n      console.log('No trailer found for movieId:', movieId);\n      return null;\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Error fetching TMDb trailer:', {\n        message: err.message,\n        response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data,\n        status: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status\n      });\n      return null;\n    }\n  });\n};\n\n// Fetch screenshots from TMDb API\nexport const fetchTmdbScreenshots = async movieId => {\n  console.log('Fetching TMDb screenshots for movieId:', movieId);\n  return rateLimitedRequest(async () => {\n    try {\n      const response = await axios.get(`${TMDB_BASE_URL}/movie/${movieId}/images`, {\n        params: {\n          api_key: TMDB_API_KEY\n          // Removed language filter to fetch all available images\n        },\n        timeout: 10000\n      });\n      console.log('TMDb API Response (images):', response.data);\n      const screenshots = response.data.backdrops.slice(0, 2).map(backdrop => `https://image.tmdb.org/t/p/w500${backdrop.file_path}`);\n      return screenshots.length > 0 ? screenshots : null;\n    } catch (err) {\n      var _err$response3, _err$response4;\n      console.error('Error fetching TMDb screenshots:', {\n        message: err.message,\n        response: (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data,\n        status: (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status\n      });\n      return null;\n    }\n  });\n};\nexport const getCategory = async categoryId => {\n  console.log('API Request: /movies/categories/' + categoryId, getAuthHeaders());\n  try {\n    const response = await axios.get(`${API_URL}/movies/categories/${categoryId}`, {\n      headers: getAuthHeaders(),\n      timeout: 10000\n    });\n    console.log('API Response: /movies/categories/' + categoryId, {\n      status: response.status,\n      data: response.data,\n      headers: response.headers\n    });\n    const data = Array.isArray(response.data) ? response.data : response.data.data || [];\n    return {\n      data\n    };\n  } catch (err) {\n    var _err$response5, _err$response6, _err$response7;\n    console.error('Error fetching category:', {\n      message: err.message,\n      response: (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.data,\n      status: (_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.status,\n      headers: (_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : _err$response7.headers\n    });\n    throw err;\n  }\n};\nexport const getMovieDetails = async (source, externalId) => {\n  console.log('API Request: /movies/details/' + source + '/' + externalId, getAuthHeaders());\n  try {\n    const response = await axios.get(`${API_URL}/movies/details/${source}/${externalId}`, {\n      headers: getAuthHeaders(),\n      timeout: 10000\n    });\n    console.log('API Response: /movies/details/' + source + '/' + externalId, response.data);\n    return response;\n  } catch (err) {\n    var _err$response8, _err$response9;\n    console.error('Error fetching movie details:', {\n      message: err.message,\n      response: (_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : _err$response8.data,\n      status: (_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : _err$response9.status\n    });\n    throw err;\n  }\n};\nexport const submitReview = async (source, externalId, reviewData) => {\n  console.log('API Request: /reviews/' + source + '/' + externalId, reviewData);\n  try {\n    const response = await axios.post(`${API_URL}/reviews/${source}/${externalId}`, {\n      text: reviewData.text,\n      name: reviewData.name,\n      email: reviewData.email\n    }, {\n      headers: getAuthHeaders()\n    });\n    console.log('API Response: /reviews/' + source + '/' + externalId, response.data);\n    return response;\n  } catch (err) {\n    var _err$response0, _err$response1;\n    console.error('Error submitting review:', {\n      message: err.message,\n      response: (_err$response0 = err.response) === null || _err$response0 === void 0 ? void 0 : _err$response0.data,\n      status: (_err$response1 = err.response) === null || _err$response1 === void 0 ? void 0 : _err$response1.status\n    });\n    throw err;\n  }\n};\nexport const getReviews = async (source, externalId) => {\n  console.log('API Request: /reviews/' + source + '/' + externalId, getAuthHeaders());\n  try {\n    const response = await axios.get(`${API_URL}/reviews/${source}/${externalId}`, {\n      headers: getAuthHeaders(),\n      timeout: 10000\n    });\n    console.log('API Response: /reviews/' + source + '/' + externalId, response.data);\n    return response;\n  } catch (err) {\n    var _err$response10, _err$response11;\n    console.error('Error fetching reviews:', {\n      message: err.message,\n      response: (_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : _err$response10.data,\n      status: (_err$response11 = err.response) === null || _err$response11 === void 0 ? void 0 : _err$response11.status\n    });\n    throw err;\n  }\n};\nexport const submitReply = async (source, externalId, reviewId, replyData) => {\n  console.log('API Request: /reviews/' + source + '/' + externalId + '/reply/' + reviewId, replyData);\n  try {\n    const response = await axios.post(`${API_URL}/reviews/${source}/${externalId}/reply/${reviewId}`, {\n      text: replyData.text,\n      name: replyData.name,\n      email: replyData.email\n    }, {\n      headers: getAuthHeaders()\n    });\n    console.log('API Response: /reviews/' + source + '/' + externalId + '/reply/' + reviewId, response.data);\n    return response;\n  } catch (err) {\n    var _err$response12, _err$response13;\n    console.error('Error submitting reply:', {\n      message: err.message,\n      response: (_err$response12 = err.response) === null || _err$response12 === void 0 ? void 0 : _err$response12.data,\n      status: (_err$response13 = err.response) === null || _err$response13 === void 0 ? void 0 : _err$response13.status\n    });\n    throw err;\n  }\n};\nexport const submitReaction = async (source, externalId, reaction) => {\n  console.log('API Request: /movies/reactions/' + source + '/' + externalId, {\n    reaction\n  });\n  try {\n    const response = await axios.post(`${API_URL}/movies/reactions/${source}/${externalId}`, {\n      reaction\n    }, {\n      headers: getAuthHeaders()\n    });\n    console.log('API Response: /movies/reactions/' + source + '/' + externalId, response.data);\n    return response;\n  } catch (err) {\n    var _err$response14, _err$response15;\n    console.error('Error submitting reaction:', {\n      message: err.message,\n      response: (_err$response14 = err.response) === null || _err$response14 === void 0 ? void 0 : _err$response14.data,\n      status: (_err$response15 = err.response) === null || _err$response15 === void 0 ? void 0 : _err$response15.status\n    });\n    throw err;\n  }\n};\nexport const login = async (email, password) => {\n  console.log('API Request: /auth/login', {\n    email\n  });\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    }, {\n      headers: getAuthHeaders(),\n      timeout: 10000\n    });\n    console.log('API Response: /auth/login', response.data);\n    return response;\n  } catch (err) {\n    var _err$response16, _err$response17;\n    console.error('Error logging in:', {\n      message: err.message,\n      response: (_err$response16 = err.response) === null || _err$response16 === void 0 ? void 0 : _err$response16.data,\n      status: (_err$response17 = err.response) === null || _err$response17 === void 0 ? void 0 : _err$response17.status\n    });\n    throw err;\n  }\n};\nexport const register = async (email, password) => {\n  console.log('API Request: /auth/register', {\n    email\n  });\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, {\n      email,\n      password\n    }, {\n      headers: getAuthHeaders(),\n      timeout: 10000\n    });\n    console.log('API Response: /auth/register', response.data);\n    return response;\n  } catch (err) {\n    var _err$response18, _err$response19;\n    console.error('Error registering:', {\n      message: err.message,\n      response: (_err$response18 = err.response) === null || _err$response18 === void 0 ? void 0 : _err$response18.data,\n      status: (_err$response19 = err.response) === null || _err$response19 === void 0 ? void 0 : _err$response19.status\n    });\n    throw err;\n  }\n};\nexport const getNotices = async () => {\n  console.log('API Request: /movies/notices', getAuthHeaders());\n  try {\n    const response = await axios.get(`${API_URL}/movies/notices`, {\n      headers: getAuthHeaders(),\n      timeout: 10000\n    });\n    console.log('API Response: /movies/notices', response.data);\n    return response;\n  } catch (err) {\n    var _err$response20, _err$response21;\n    console.error('Error fetching notices:', {\n      message: err.message,\n      response: (_err$response20 = err.response) === null || _err$response20 === void 0 ? void 0 : _err$response20.data,\n      status: (_err$response21 = err.response) === null || _err$response21 === void 0 ? void 0 : _err$response21.status\n    });\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","NODE_ENV","TMDB_API_KEY","TMDB_BASE_URL","delay","ms","Promise","resolve","setTimeout","lastTmdbRequestTime","rateLimitedRequest","requestFn","now","Date","timeSinceLastRequest","minDelay","getAuthHeaders","token","localStorage","getItem","headers","Accept","Authorization","fetchTmdbTrailer","movieId","console","log","response","get","params","api_key","language","timeout","data","trailer","results","find","video","type","site","key","err","_err$response","_err$response2","error","message","status","fetchTmdbScreenshots","screenshots","backdrops","slice","map","backdrop","file_path","length","_err$response3","_err$response4","getCategory","categoryId","Array","isArray","_err$response5","_err$response6","_err$response7","getMovieDetails","source","externalId","_err$response8","_err$response9","submitReview","reviewData","post","text","name","email","_err$response0","_err$response1","getReviews","_err$response10","_err$response11","submitReply","reviewId","replyData","_err$response12","_err$response13","submitReaction","reaction","_err$response14","_err$response15","login","password","_err$response16","_err$response17","register","_err$response18","_err$response19","getNotices","_err$response20","_err$response21"],"sources":["C:/Users/hp/Desktop/new/project/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Use process.env.REACT_APP_API_URL for Create React App\r\n// Default to /api to leverage the proxy in development, and use Render backend URL in production\r\nconst API_URL = process.env.REACT_APP_API_URL || (process.env.NODE_ENV === 'development' ? '/api' : 'https://movieverse-backend.onrender.com/api');\r\nconst TMDB_API_KEY = process.env.TMDB_API_KEY || 'be73ce1f00402fb574b1dba0962181bc';\r\nconst TMDB_BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n// Rate limiting delay (250ms between requests to stay under 40 requests per 10 seconds)\r\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nlet lastTmdbRequestTime = 0;\r\n\r\nconst rateLimitedRequest = async (requestFn) => {\r\n  const now = Date.now();\r\n  const timeSinceLastRequest = now - lastTmdbRequestTime;\r\n  const minDelay = 250; // 250ms delay ensures < 40 requests per 10 seconds\r\n  if (timeSinceLastRequest < minDelay) {\r\n    await delay(minDelay - timeSinceLastRequest);\r\n  }\r\n  lastTmdbRequestTime = Date.now();\r\n  return requestFn();\r\n};\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  const headers = {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  };\r\n  if (token) {\r\n    headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return headers;\r\n};\r\n\r\n// Fetch trailer from TMDb API\r\nexport const fetchTmdbTrailer = async (movieId) => {\r\n  console.log('Fetching TMDb trailer for movieId:', movieId);\r\n  return rateLimitedRequest(async () => {\r\n    try {\r\n      const response = await axios.get(`${TMDB_BASE_URL}/movie/${movieId}/videos`, {\r\n        params: {\r\n          api_key: TMDB_API_KEY,\r\n          language: 'en-US',\r\n        },\r\n        timeout: 10000,\r\n      });\r\n      console.log('TMDb API Response (videos):', response.data);\r\n      const trailer = response.data.results.find(video => video.type === 'Trailer' && video.site === 'YouTube');\r\n      if (trailer) {\r\n        return `https://www.youtube.com/watch?v=${trailer.key}`;\r\n      }\r\n      console.log('No trailer found for movieId:', movieId);\r\n      return null;\r\n    } catch (err) {\r\n      console.error('Error fetching TMDb trailer:', {\r\n        message: err.message,\r\n        response: err.response?.data,\r\n        status: err.response?.status,\r\n      });\r\n      return null;\r\n    }\r\n  });\r\n};\r\n\r\n// Fetch screenshots from TMDb API\r\nexport const fetchTmdbScreenshots = async (movieId) => {\r\n  console.log('Fetching TMDb screenshots for movieId:', movieId);\r\n  return rateLimitedRequest(async () => {\r\n    try {\r\n      const response = await axios.get(`${TMDB_BASE_URL}/movie/${movieId}/images`, {\r\n        params: {\r\n          api_key: TMDB_API_KEY,\r\n          // Removed language filter to fetch all available images\r\n        },\r\n        timeout: 10000,\r\n      });\r\n      console.log('TMDb API Response (images):', response.data);\r\n      const screenshots = response.data.backdrops.slice(0, 2).map(backdrop => `https://image.tmdb.org/t/p/w500${backdrop.file_path}`);\r\n      return screenshots.length > 0 ? screenshots : null;\r\n    } catch (err) {\r\n      console.error('Error fetching TMDb screenshots:', {\r\n        message: err.message,\r\n        response: err.response?.data,\r\n        status: err.response?.status,\r\n      });\r\n      return null;\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCategory = async (categoryId) => {\r\n  console.log('API Request: /movies/categories/' + categoryId, getAuthHeaders());\r\n  try {\r\n    const response = await axios.get(`${API_URL}/movies/categories/${categoryId}`, {\r\n      headers: getAuthHeaders(),\r\n      timeout: 10000,\r\n    });\r\n    console.log('API Response: /movies/categories/' + categoryId, {\r\n      status: response.status,\r\n      data: response.data,\r\n      headers: response.headers,\r\n    });\r\n    const data = Array.isArray(response.data) ? response.data : (response.data.data || []);\r\n    return { data };\r\n  } catch (err) {\r\n    console.error('Error fetching category:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n      headers: err.response?.headers,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getMovieDetails = async (source, externalId) => {\r\n  console.log('API Request: /movies/details/' + source + '/' + externalId, getAuthHeaders());\r\n  try {\r\n    const response = await axios.get(`${API_URL}/movies/details/${source}/${externalId}`, {\r\n      headers: getAuthHeaders(),\r\n      timeout: 10000,\r\n    });\r\n    console.log('API Response: /movies/details/' + source + '/' + externalId, response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error fetching movie details:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const submitReview = async (source, externalId, reviewData) => {\r\n  console.log('API Request: /reviews/' + source + '/' + externalId, reviewData);\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/reviews/${source}/${externalId}`,\r\n      {\r\n        text: reviewData.text,\r\n        name: reviewData.name,\r\n        email: reviewData.email,\r\n      },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    console.log('API Response: /reviews/' + source + '/' + externalId, response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error submitting review:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getReviews = async (source, externalId) => {\r\n  console.log('API Request: /reviews/' + source + '/' + externalId, getAuthHeaders());\r\n  try {\r\n    const response = await axios.get(`${API_URL}/reviews/${source}/${externalId}`, {\r\n      headers: getAuthHeaders(),\r\n      timeout: 10000,\r\n    });\r\n    console.log('API Response: /reviews/' + source + '/' + externalId, response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error fetching reviews:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const submitReply = async (source, externalId, reviewId, replyData) => {\r\n  console.log('API Request: /reviews/' + source + '/' + externalId + '/reply/' + reviewId, replyData);\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/reviews/${source}/${externalId}/reply/${reviewId}`,\r\n      {\r\n        text: replyData.text,\r\n        name: replyData.name,\r\n        email: replyData.email,\r\n      },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    console.log('API Response: /reviews/' + source + '/' + externalId + '/reply/' + reviewId, response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error submitting reply:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const submitReaction = async (source, externalId, reaction) => {\r\n  console.log('API Request: /movies/reactions/' + source + '/' + externalId, { reaction });\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/movies/reactions/${source}/${externalId}`,\r\n      { reaction },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    console.log('API Response: /movies/reactions/' + source + '/' + externalId, response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error submitting reaction:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  console.log('API Request: /auth/login', { email });\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password }, {\r\n      headers: getAuthHeaders(),\r\n      timeout: 10000,\r\n    });\r\n    console.log('API Response: /auth/login', response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error logging in:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const register = async (email, password) => {\r\n  console.log('API Request: /auth/register', { email });\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/register`, { email, password }, {\r\n      headers: getAuthHeaders(),\r\n      timeout: 10000,\r\n    });\r\n    console.log('API Response: /auth/register', response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error registering:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getNotices = async () => {\r\n  console.log('API Request: /movies/notices', getAuthHeaders());\r\n  try {\r\n    const response = await axios.get(`${API_URL}/movies/notices`, {\r\n      headers: getAuthHeaders(),\r\n      timeout: 10000,\r\n    });\r\n    console.log('API Response: /movies/notices', response.data);\r\n    return response;\r\n  } catch (err) {\r\n    console.error('Error fetching notices:', {\r\n      message: err.message,\r\n      response: err.response?.data,\r\n      status: err.response?.status,\r\n    });\r\n    throw err;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}